syntax = "proto3";
option java_package = "club.bayview.smoothieweb";

service SmoothieRunnerAPI {
    rpc TestSolution(stream TestSolutionRequest) returns (stream TestSolutionResponse) {}
    rpc Health(Empty) returns (ServiceHealth) {}
}

message Empty {}

message ServiceHealth {
    uint64 numOfTasksToBeDone = 1; // total number of tasks to be done
    uint64 numOfTasksInQueue = 2; // number of tasks in queue (not judging yet)
    uint64 numOfWorkers = 3; // number of workers configured
}

// testing requests

message TestSolutionRequest {
    Problem problem = 1;
    Solution solution = 2;
    bool testBatchEvenIfFailed = 3; // test all cases in batch even if one failed
    bool cancelTesting = 4; // cancel the entire operation
}

message Solution {
    string language = 1;
    string code = 2;
}

message Problem {
    repeated ProblemBatch testBatches = 1;
    string problemID = 2;
    uint64 testCasesHashCode = 3; // hash of testBatches, to update cache if need be
    ProblemGrader grader = 4;
    double timeLimit = 5;
    double memLimit = 6;
}

message ProblemGrader {
    string type = 1;
    string customCode = 2;
}

message ProblemBatch {
    repeated ProblemBatchCase cases = 1;
}

message ProblemBatchCase {
    string input = 1; // test data
    string expectedAnswer = 2;
}

// server test responses

message TestSolutionResponse {
    TestCaseResult testCaseResult = 1;
    bool completedTesting = 2; // if the testing has completed (even on failure)
    string compileError = 3; // the compile error if there is one
}

message TestCaseResult {
    uint64 batchNumber = 1;
    uint64 caseNumber = 2;
    string result = 3; // WA, AC, etc...
    string resultInfo = 4; // runtime error
    double time = 5;
    double memUsage = 6;
}
